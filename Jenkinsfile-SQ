pipeline {
    agent any

    environment {
        PROJECT_NAME = "mini-rag"
    }

    stages {
        stage('SonarQube Analysis') {
            steps {
                script {
                    echo "SonarQube Analysis..."
                    def scannerHome = tool 'SonarQube'
                    withSonarQubeEnv('SonarQube') {
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=mini-rag-main \
                            -Dsonar.projectName=${PROJECT_NAME} \
                            -Dsonar.python.version=3.9 \
                            -Dsonar.coverage.exclusions=** \
                            -Dsonar.scm.provider=git
                        """
                    }
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
